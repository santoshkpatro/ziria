# Generated by Django 4.1.7 on 2023-04-25 17:23

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("ziria", "0008_address"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("order_number", models.IntegerField(blank=True, null=True)),
                (
                    "order_id",
                    models.CharField(blank=True, editable=False, max_length=10),
                ),
                ("currency", models.CharField(max_length=3)),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("archived", "Archived"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="open",
                        max_length=10,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("authorized", "Authorized"),
                            ("paid", "Paid"),
                            ("unpaid", "Unpaid"),
                            ("partial_paid", "Partial Paid"),
                            ("refunded", "Refunded"),
                            ("partial_refunded", "Partial Refunded"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "payment_provider",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("online", "Online"), ("cod", "Cash On Delivery")],
                        max_length=10,
                    ),
                ),
                (
                    "fulfillment_status",
                    models.CharField(
                        choices=[
                            ("fulfilled", "Fulfilled"),
                            ("unfulfilled", "Unfulfilled"),
                            ("partially_fulfilled", "Partially Fulfilled"),
                            ("scheduled", "Scheduled"),
                            ("on_hold", "On Hold"),
                        ],
                        default="unfulfilled",
                        max_length=20,
                    ),
                ),
                (
                    "return_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("requested", "Requested"),
                            ("in_progress", "In Progress"),
                            ("returned", "Returned"),
                            ("inspection", "Inspection"),
                            ("failed", "Failed"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("payment_id", models.TextField(blank=True, null=True)),
                ("transaction_id", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_order_placed", models.BooleanField(default=False)),
                ("placed_at", models.DateTimeField(blank=True, null=True)),
                ("is_test_order", models.BooleanField(default=False)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "billing_address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="billing_orders",
                        to="ziria.address",
                    ),
                ),
                (
                    "customer",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_ordders",
                        to="ziria.customer",
                    ),
                ),
                (
                    "shipping_address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shipping_orders",
                        to="ziria.address",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="store_orders",
                        to="ziria.store",
                    ),
                ),
            ],
            options={
                "db_table": "orders",
                "unique_together": {("store", "order_number")},
            },
        ),
    ]
